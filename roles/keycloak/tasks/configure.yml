---

# this is an important block! Do not remove
- name: Wait for keycloak to initialize
  block:
  - name: Ensure Keycloak service is running
    systemd:
      name: "keycloak"
      state: "started"
    become: yes
  #wait for port to open
  - name: Waiting for service port to be opened...
    wait_for:
      host: "{{ keycloak_local_address }}"
      port: 8080
      delay: 10
      timeout: 180
  #wait for service to respond
  - name: Waiting for service to be up and running...
    uri:
      url: "http://{{ keycloak_local_address }}:8080/{{ keycloak_base_url_path }}"
      status_code: "200"
      timeout: 600

# configure AUP, realm keys, etc
- name: Configure the keycloak (AUP, realm keys, etc)
  block:

    - name: Apply realm.config parameters
      include_tasks: blocks/configure_basic_realm.yml
      with_items: "{{ keycloak_config.realms | default([]) }}"
      loop_control:
        loop_var: current_realm_item
      run_once: true

    - name: Configure keys
      include_tasks: blocks/keys/configure_keys.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "keys"
        - skip_missing: True

    - name: Configure events logging
      include_tasks: blocks/configure_event_logging.yml
      with_items: "{{ keycloak_config.realms | default([]) }}"
      loop_control:
        loop_var: current_realm_item
      run_once: true

    - name: Configure AUP (Terms and Conditions)
      uri:
        url: "{{ keycloak_proxy_host }}/admin/realms/{{ item.name }}/authentication/required-actions/{{ keycloak_api.terms_and_conditions.endpoint }}"
        method: PUT
        body_format: json
        headers:
          Authorization: "Bearer {{ tokens.json.access_token }}"
        body:
          alias: "{{ keycloak_api.terms_and_conditions.alias }}"
          name: "Terms and Conditions"
          providerId: "{{ keycloak_api.terms_and_conditions.provider_id }}"
          enabled: "{{ item.aup.enabled }}"
          defaultAction: "{{ item.aup.defaultAction }}"
          priority: 20
          config:
            reset_every: "{{ item.aup.reset_every }}"
            reset_every_multiplier: "{{ item.aup.reset_every_multiplier }}"
        status_code: 204
      with_items: "{{ keycloak_config.realms | default([]) }}"
      when: not item.aup is undefined
      run_once: true

    - name: Setup roles
      include_tasks: blocks/roles_configuration/configure.yml
      tags:
        - "keycloak:config:realm:roles"

    - name: "Configure Identity Federations"
      include_tasks: blocks/configure_federations.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "federations"
        - skip_missing: True
      run_once: true
      tags:
        - "keycloak:config:realm:federations"

    - name: "Configure Social IdPs"
      include_tasks: blocks/configure_social_idps.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "social_idps"
        - skip_missing: True
      run_once: true
      tags:
        - "keycloak:config:realm:idps"
        - "keycloak:config:realm:social_idps"

    - name: "Configure SAML IdPs"
      include_tasks: blocks/configure_idps.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "saml_idps"
        - skip_missing: True
      run_once: true
      tags:
        - "keycloak:config:realm:idps"
        - "keycloak:config:realm:saml_idps"

    - name: "Configure OIDC IdPs"
      include_tasks: blocks/configure_idps.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "oidc_idps"
        - skip_missing: True
      run_once: true
      tags:
        - "keycloak:config:realm:idps"
        - "keycloak:config:realm:oidc_idps"

    - name: "Configure IdP Mappers"
      include_tasks: blocks/configure_idp_mappers.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "idp_mappers"
        - skip_missing: True
      run_once: true
      tags:
        - "keycloak:config:realm:idp_mappers"

    - name: "Setup authentication"
      block:
        - name: "Configure 'browser' authentication flow"
          include_tasks: blocks/authentication/configure_browser_flow.yml
          with_items: "{{ keycloak_config.realms | default([]) }}"
          loop_control:
            loop_var: current_realm
          run_once: true
        - name: "Configure first broker login flow"
          include_tasks: blocks/authentication/configure_first_broker_login.yml
          with_items: "{{ keycloak_config.realms | default([]) }}"
          loop_control:
            loop_var: current_realm
          run_once: true
      tags:
        - "keycloak:config:realm:authentication"

    - name: "Configure client scopes (block)"
      block:
        - name: "Clear all assigned default and optional client scopes"
          include_tasks: blocks/helpers/unassign_default_client_scopes.yml
          with_items: "{{ keycloak_config.realms | default([]) }}"
          loop_control:
            loop_var: current_realm
          run_once: true
        - name: "Add new / update existing client scopes"
          include_tasks: blocks/configure_client_scopes.yml
          with_subelements:
            - "{{keycloak_config.realms | default([])}} "
            - "client_scopes"
            - skip_missing: True
          run_once: true
      tags:
        - "keycloak:config:realm:client_scopes"

    - name: "Configure client registration policies"
      include_tasks: blocks/configure_client_reg_policies.yml
      with_items: "{{ keycloak_config.realms | default([]) }}"
      loop_control:
        loop_var: current_realm
      run_once: true
      tags:
        - "keycloak:config:realm:client_reg_policies"

  tags: "keycloak:config:realm"

### wayf plugin configuration
- name: Configure wayf plugin
  block:
    - name: Acquire tokens
      include_tasks: blocks/helpers/get_tokens.yml
    - name: Configure wayf plugin
      include_tasks: blocks/configure_theme.yml
      loop: "{{ keycloak_plugins.wayf.theme.add_to_realms | default([]) }}"
      loop_control:
        loop_var: keycloak_realm
  when: keycloak_plugins.wayf is defined and keycloak_plugins.wayf.enabled | default(false) | bool
  tags:
    - "keycloak:config:plugin"
    - "keycloak:config:plugin:wayf"

### RCIAM Advanced Group Management (AGM) extension
- name: "Configure RCIAM Advanced Group Management (AGM) extension"
  block:
    - name: Acquire tokens
      include_tasks: blocks/helpers/get_tokens.yml
    - name: "Configure RCIAM Advanced Group Management (AGM) extension"
      include_tasks: blocks/configure_agm.yml
      loop: "{{ keycloak_plugins.group.add_to_realms | default([]) }}"
      loop_control:
        loop_var: keycloak_realm
      run_once: true
  when: keycloak_plugins.group.enabled | default(false)
  tags:
    - "keycloak:config:plugin"
    - "keycloak:config:plugin:group"

- name: Configure Keycloak themes
  block:
    - name: Acquire tokens
      include_tasks: blocks/helpers/get_tokens.yml
    - name: Configure Keycloak themes
      uri:
        url: "{{ keycloak_proxy_host }}/admin/realms/{{ item.name }}"
        method: "PUT"
        body_format: json
        headers:
          Authorization: "Bearer {{ tokens.json.access_token }}"
        body:
          "{{ body_payload }}"
        status_code: "204"
      with_items: "{{ keycloak_config.realms | default([]) }}"
      run_once: true
      vars:
        - body_payload:
            loginTheme: "{{ item.themes.login | default(keycloak_themes.login) | default(omit) }}"
            accountTheme: "{{ item.themes.account | default(keycloak_themes.account) | default(omit) }}"
            emailTheme: "{{ item.themes.email | default(keycloak_themes.email) | default(omit) }}"
  tags:
    - "keycloak:config:realm"
    - "keycloak:config:realm:themes"
