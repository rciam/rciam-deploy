---

- name: Acquire tokens
  include_tasks: blocks/helpers/get_tokens.yml
  tags:
    - "keycloak:config:realm:idps"
    - "keycloak:config:realm:oidc_idps"
    - "keycloak:config:realm:saml_idps"

- name: "Get current IdP with alias : {{ item[1].data.alias }} and realm: {{ item[0].name }}"
  include_tasks: blocks/helpers/get_realm_idp.yml
  vars:
    alias: "{{ item[1].data.alias }}"
  tags:
    - "keycloak:config:realm:idps"
    - "keycloak:config:realm:oidc_idps"
    - "keycloak:config:realm:saml_idps"

- name: "{% if new_idp %}Installing{% else %}Updating{% endif %} saml IdP: {{ item[1].data.alias }}"
  block:
    - name: "Get config from url: {{ item[1].metadataUrl }}"
      uri:
        url: "{{ keycloak_proxy_host }}/admin/realms/{{ item[0].name }}/identity-provider/import-config"
        method: POST
        body_format: json
        headers:
          Authorization: "Bearer {{ tokens.json.access_token }}"
        body:
          fromUrl: "{{ item[1].metadataUrl }}"
          providerId: "{{ item[1].data.providerId }}"
        status_code: 200
      register: idp_result
      when: item[1].data.config.autoUpdate == "true" or (item[1].metadataUrl is defined and new_idp)

    - name: "Setup autoUpdate {{ item[1].providerId }} IdP {{ item[1].data.alias }}"
      uri:
        url: "{{ keycloak_proxy_host }}/admin/realms/{{ item[0].name }}/identity-provider/instances{% if new_idp %}{% else %}/{{ item[1].data.alias }}{% endif %}"
        method: "{% if new_idp %}POST{% else %}PUT{% endif %}"
        body_format: json
        headers:
          Authorization: "Bearer {{ tokens.json.access_token }}"
        body:
          "{{ { 'config': idp_result.json } | combine( item[1].data, recursive=True ) }}"
        status_code: "{% if new_idp %}201{% else %}204{% endif %}"
      when: item[1].data.config.autoUpdate == "true" or (item[1].metadataUrl is defined and new_idp)

    - name: "Setup no autoUpdate {{ item[1].providerId }} IdP {{ item[1].data.alias }}"
      uri:
        url: "{{ keycloak_proxy_host }}/admin/realms/{{ item[0].name }}/identity-provider/instances{% if new_idp %}{% else %}/{{ item[1].data.alias }}{% endif %}"
        method: "{% if new_idp %}POST{% else %}PUT{% endif %}"
        body_format: json
        headers:
          Authorization: "Bearer {{ tokens.json.access_token }}"
        body:
          "{{ item[1].data }}"
        status_code: "{% if new_idp %}201{% else %}204{% endif %}"
      when: item[1].metadataUrl is undefined or ( item[1].data.config.autoUpdate != "true" and !new_idp)

  tags:
    - "keycloak:config:realm:idps"
    - "keycloak:config:realm:oidc_idps"
    - "keycloak:config:realm:saml_idps"
