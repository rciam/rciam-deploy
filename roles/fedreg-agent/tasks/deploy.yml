---
# tasks file for fedreg-agent


- name: Download only the requirements.txt from rciam-federation-registry-agent repository
  get_url:
    url: "{{ fedreg_agent_registry_requirements_url }}"
    dest: /tmp/requirements.txt
  become: yes
  tags:
   - agent
   - python
   - requirements


- name: Install python requirements
  pip: 
    requirements: /tmp/requirements.txt
    virtualenv: "{{ fedreg_agent_venv_path }}"
    virtualenv_python: "{{ fedreg_agent_venv_python }}"
  become: yes
  tags:
   - agent
   - python
   - requirements


- name: Install rciam-federation-registry-agent (test.pypi.org)
  pip: 
    name: rciam-federation-registry-agent
    virtualenv: "{{ fedreg_agent_venv_path }}"
    virtualenv_python: "{{ fedreg_agent_venv_python }}"
    extra_args: -i https://test.pypi.org/simple/
  become: yes
  tags:
   - agent
   - python
   - requirements


- name: "Ensure {{ fedreg_agent_conf_dir }} dir exists"
  file:
    path: "{{ fedreg_agent_conf_dir }}"
    state: directory
  become: yes
  tags:
   - agent
   - config


- name: Copy logger.conf file
  copy:
    src: logger.conf
    dest: "{{ fedreg_agent_conf_dir }}/logger.conf"
    force: no
  become: yes
  tags:
   - agent
   - config


- name: Create SSP & MitreID federation registry configuration file
  template:
    src: deployers.config.json.j2
    dest: "{{ fedreg_agent_conf_dir }}/deployers.config"
    backup: yes 
  when: fedreg_agent_enable_ssp or fedreg_agent_enable_mitreid
  become: yes
  tags:
   - agent
   - config


- name: Create MitreId federation registry service file
  template:
    src: deployer_mitreid.service.j2
    dest: "{{ fedreg_agent_services_path }}/deployer_mitreid.service"
    backup: yes 
  register: mitreid_service
  when: fedreg_agent_enable_mitreid
  become: yes
  tags:
   - agent
   - service

- name: Create SSP federation registry service file
  template:
    src: deployer_ssp.service.j2
    dest: "{{ fedreg_agent_services_path }}/deployer_ssp.service"
    backup: yes 
  register: ssp_service
  when: fedreg_agent_enable_ssp
  become: yes
  tags:
   - agent
   - service


- name: Reload systemd
  command: systemctl daemon-reload
  when: mitreid_service.changed or ssp_service.changed
  become: yes
  tags:
   - agent
   - service
   - daemon-reload


- name: MitreId federation registry service enable
  service:
    name: deployer_mitreid
    #pattern: "{{ fedreg_agent_services_path }}/deployer_mitreid.service"
    enabled: yes
    state: started
  when: fedreg_agent_enable_mitreid
  become: yes
  tags:
   - agent
   - service
   - service_enable

- name: SSP federation registry service enable
  service:
    name: deployer_ssp
    #pattern: "{{ fedreg_agent_services_path }}/deployer_ssp.service"
    enabled: yes
    state: started
  when: fedreg_agent_enable_ssp
  become: yes
  tags:
   - agent
   - service
   - service_enable

